#!/usr/bin/env python3
from multiprocessing import Pool
from pathlib import Path
from shutil import which
from subprocess import run, CalledProcessError, DEVNULL, PIPE
from typing import Union


def run_command(commands: Union[str, list]):
    commands_to_run = commands
    # single commands can be passed, as well as a series, so check if
    if isinstance(commands, str):
        commands_to_run = [commands]

    for command in commands_to_run:
        command_array = command.split(' ')
        if which(command_array[0]) is None:
            print('\033[35m' + command_array[0] + '\033[0m not found')
            continue
        try:
            print('\033[36m' + command + '\033[0m starting')
            run(command_array, check=True, stdout=DEVNULL, stderr=PIPE)
            print('\033[32m' + command + '\033[0m complete')
        except CalledProcessError as called_process_error:
            message = called_process_error.stderr or 'No Message'
            print('\033[31m' + command + ' Error\n\033[0m' + message)
            pass


def main():
    pool = Pool()
    home = str(Path.home())
    commands = [
        # homebrew https://brew.sh/
        ['brew update', 'brew outdated', 'brew upgrade', 'brew cleanup'],
        # yarn https://yarnpkg.com/en/
        'yarn global upgrade',
        # composer https://getcomposer.org/
        'composer global update',
        # oh-my-zsh https://ohmyz.sh/
        f"git -C {home}/.oh-my-zsh pull --rebase --stat origin master",
        # oh-my-zsh custom plugins https://github.com/robbyrussell/oh-my-zsh/wiki/Customization#overriding-and-adding-plugins
        f"up-git {home}/.oh-my-zsh",
        # pip https://pypi.org/project/pip/
        'up-pip',
        # vim-plug https://github.com/junegunn/vim-plug
        f"vim -S up-vim.vim",
    ]
    pool.map(run_command, commands)


if __name__ == '__main__':
    main()
